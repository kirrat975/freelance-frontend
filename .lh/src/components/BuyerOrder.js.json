{
    "sourceFile": "src/components/BuyerOrder.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 3,
            "patches": [
                {
                    "date": 1662648398033,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1662648411174,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -76,9 +76,9 @@\n                         <th>description</th>\r\n                         <th>Category</th>\r\n                         <th>Duration</th>\r\n                         <th>Price</th>\r\n-                        <th></th>\r\n+                        <th>File</th>\r\n                         <th>Status</th>\r\n                         <th>Update Status</th>\r\n                        \r\n                     \r\n@@ -93,8 +93,9 @@\n                         <td>{data.description}</td>\r\n                         <td>{data.category}</td>\r\n                         <td>{data.duration}</td>\r\n                         <td>Rs.{data.price}</td>\r\n+                        <tf></tf>\r\n                         <td>{data.status}</td>\r\n                         <td><button id=\"bsupd\" onClick={()=>{setIsOpen(true)}}>Update status</button></td>\r\n \r\n                        </tr>\r\n"
                },
                {
                    "date": 1662648423828,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -93,9 +93,9 @@\n                         <td>{data.description}</td>\r\n                         <td>{data.category}</td>\r\n                         <td>{data.duration}</td>\r\n                         <td>Rs.{data.price}</td>\r\n-                        <td>{</td>\r\n+                        <td>{}</td>\r\n                         <td>{data.status}</td>\r\n                         <td><button id=\"bsupd\" onClick={()=>{setIsOpen(true)}}>Update status</button></td>\r\n \r\n                        </tr>\r\n"
                },
                {
                    "date": 1662649677753,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -60,9 +60,9 @@\n           }\r\n \r\n \r\n const handleDownload= async ()=>[\r\n-  await axios.get(())\r\n+  await axios.get()\r\n ]\r\n   return (\r\n     <div>\r\n         <div className='p-4'>\r\n"
                }
            ],
            "date": 1662648398033,
            "name": "Commit-0",
            "content": "import {React ,useState,useEffect} from 'react';\r\nimport Bheader from './Bheader';\r\nimport {Modal, ModalFooter} from \"react-bootstrap\";\r\nimport './SBorder.css';\r\n\r\nimport axios from \"axios\";\r\n\r\n\r\nfunction BuyerOrders() {\r\n    const [Suserdata, setSUserData] = useState([]);\r\n    const order=JSON.parse(localStorage.getItem(\"order\"));\r\n    const buyer=JSON.parse(localStorage.getItem(\"buyer\"));\r\n    const buyerId=buyer.map(x=>x._id);\r\n    const [isOpen, setIsOpen] =useState(false);\r\n    const [completed, setScomp] = useState(false);\r\n    const [cancelled, setScan] = useState(false);\r\n    const[checked,setCheck]=useState(false);\r\n    const[rating,setRate]=useState(\"\");\r\n\r\n   \r\n   \r\n   \r\n    useEffect(() => {\r\n        getOrder();\r\n      \r\n      }, []);\r\n    \r\n      const getOrder = async () => {\r\n       \r\n     \r\n        await axios.get(\"http://localhost:9999/retrieveOrders/\"+order.email).then((response)=>{\r\n         \r\n\r\n          \r\n        console.log(response.data);\r\n      \r\n        if(buyerId[0]===response.data[0].buyerId)\r\n        {\r\n            setSUserData(response.data);\r\n        }\r\n        else{\r\n            alert(\"Buyer doesn't match\")\r\n        }\r\n\r\n           \r\n        });\r\n    }\r\n    const handleSubmit= async (e)=> {\r\n       e.preventDefault();\r\n        \r\n      if(cancelled==='Cancelled'){\r\n        console.log(cancelled)\r\n      }\r\n      else if(completed==='Completed')\r\n      {\r\n        console.log(completed + \"\" + rating)\r\n      }\r\n\r\n       setIsOpen(false);\r\n          }\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n        <div className='p-4'>\r\n        <Bheader/>\r\n        <h1>My orders</h1>\r\n        <div className='botabcont'>\r\n        <table className='tabordr'>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Buyer Id</th>\r\n                        <th>Seller Id</th>\r\n                        <th>title</th>\r\n                        <th>description</th>\r\n                        <th>Category</th>\r\n                        <th>Duration</th>\r\n                        <th>Price</th>\r\n                        <th></th>\r\n                        <th>Status</th>\r\n                        <th>Update Status</th>\r\n                       \r\n                    \r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                {Suserdata.map(data=>(\r\n                       <tr>\r\n                        <td >{data.buyerId}</td>\r\n                        <td >{data.sellerId}</td>\r\n                        <td>{data.title}</td>\r\n                        <td>{data.description}</td>\r\n                        <td>{data.category}</td>\r\n                        <td>{data.duration}</td>\r\n                        <td>Rs.{data.price}</td>\r\n                        <td>{data.status}</td>\r\n                        <td><button id=\"bsupd\" onClick={()=>{setIsOpen(true)}}>Update status</button></td>\r\n\r\n                       </tr>\r\n\r\n\r\n    ))}\r\n   \r\n                </tbody>\r\n            </table>\r\n        \r\n            </div>\r\n            <Modal show={isOpen}>\r\n        <Modal.Header>\r\n          <Modal.Title>Submit Work</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n        \r\n        <form className='swform' onSubmit={(e)=>{handleSubmit(e)}}>\r\n            <div className='inmod'>\r\n            <p>Are you satisfied with seller's order/delievered work?\r\n            If yes tick on completed checkbox, and if no tick on cancelled checkbox.</p>\r\n            <ul>\r\n            <li>\r\n            <label>Completed</label>\r\n            <input type=\"checkbox\" value=\"Completed\" onChange={(e)=>{setScomp(e.target.value);setCheck(!checked)}} checked={checked}/>\r\n            <div>\r\n             {\r\n                checked ? (\r\n                <input type=\"number\" id=\"inprate\" value={rating} placeholder='Enter rating from 1 to 5 for seller' onChange={(e)=>setRate(e.target.value)}/>\r\n               ) : (<div></div>)\r\n             }\r\n\r\n            \r\n\r\n                \r\n            </div>\r\n            </li>\r\n    \r\n            <li><label>Cancelled</label>\r\n            <input type=\"checkbox\"  value=\"Cancelled\" onChange={(e)=>setScan(e.target.value)} /></li>\r\n            \r\n            </ul>\r\n\r\n          </div>\r\n          <div>\r\n          <button id=\"swbtn\">Submit</button>\r\n          </div>\r\n        </form>\r\n        \r\n        </Modal.Body>\r\n        <ModalFooter>\r\n        <button onClick={()=>setIsOpen(false)}> Cancel</button>\r\n        </ModalFooter>\r\n      </Modal>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BuyerOrders"
        }
    ]
}